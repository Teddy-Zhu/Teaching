<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jcos.teaching.core.dao.BookPlanMapper">
	<resultMap id="BaseResultMap" type="com.jcos.teaching.core.model.BookPlan">
		<id column="intPlanId" property="intplanid" jdbcType="INTEGER" />
		<result column="strCourseName" property="strcoursename" jdbcType="VARCHAR" />
		<result column="intCourseTypeId" property="intcoursetypeid" jdbcType="INTEGER" />
		<result column="strClass" property="strclass" jdbcType="VARCHAR" />
		<result column="intStudCount" property="intstudcount" jdbcType="INTEGER" />
		<result column="intTeacCount" property="intteaccount" jdbcType="INTEGER" />
		<result column="intBookId" property="intbookid" jdbcType="INTEGER" />
		<result column="intUserId" property="intuserid" jdbcType="INTEGER" />
		<result column="intPlanStatusId" property="intplanstatusid" jdbcType="INTEGER" />
		<result column="intFromYear" property="intfromyear" jdbcType="INTEGER" />
		<result column="intToYear" property="inttoyear" jdbcType="INTEGER" />
		<result column="intTerm" property="intterm" jdbcType="INTEGER" />
		<result column="dateCreateTime" property="datecreatetime" jdbcType="TIMESTAMP" />
		<result column="strMark" property="strmark" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		intPlanId, strCourseName, intCourseTypeId, strClass, intStudCount, intTeacCount,
		intBookId, intUserId, intPlanStatusId, intFromYear, intToYear, intTerm, dateCreateTime,
		strMark
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from bookplan
		where intPlanId = #{intplanid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from bookplan
		where intPlanId = #{intplanid,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.jcos.teaching.core.model.BookPlan">
		insert into bookplan (intPlanId, strCourseName, intCourseTypeId,
		strClass, intStudCount, intTeacCount,
		intBookId, intUserId, intPlanStatusId,
		intFromYear,
		intToYear, intTerm,
		dateCreateTime, strMark)
		values (#{intplanid,jdbcType=INTEGER},
		#{strcoursename,jdbcType=VARCHAR}, #{intcoursetypeid,jdbcType=INTEGER},
		#{strclass,jdbcType=VARCHAR},
		#{intstudcount,jdbcType=INTEGER}, #{intteaccount,jdbcType=INTEGER},
		#{intbookid,jdbcType=INTEGER}, #{intuserid,jdbcType=INTEGER}, #{intplanstatusid,jdbcType=INTEGER},
		#{intfromyear,jdbcType=INTEGER},
		#{inttoyear,jdbcType=INTEGER}, #{intterm,jdbcType=INTEGER},
		#{datecreatetime,jdbcType=TIMESTAMP}, #{strmark,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.jcos.teaching.core.model.BookPlan" useGeneratedKeys="true" keyProperty="intplanid">
		insert into bookplan
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="intplanid != null">
				intPlanId,
			</if>
			<if test="strcoursename != null">
				strCourseName,
			</if>
			<if test="intcoursetypeid != null">
				intCourseTypeId,
			</if>
			<if test="strclass != null">
				strClass,
			</if>
			<if test="intstudcount != null">
				intStudCount,
			</if>
			<if test="intteaccount != null">
				intTeacCount,
			</if>
			<if test="intbookid != null">
				intBookId,
			</if>
			<if test="intuserid != null">
				intUserId,
			</if>
			<if test="intplanstatusid != null">
				intPlanStatusId,
			</if>
			<if test="intfromyear != null">
				intFromYear,
			</if>
			<if test="inttoyear != null">
				intToYear,
			</if>
			<if test="intterm != null">
				intTerm,
			</if>
			<if test="datecreatetime != null">
				dateCreateTime,
			</if>
			<if test="strmark != null">
				strMark,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="intplanid != null">
				#{intplanid,jdbcType=INTEGER},
			</if>
			<if test="strcoursename != null">
				#{strcoursename,jdbcType=VARCHAR},
			</if>
			<if test="intcoursetypeid != null">
				#{intcoursetypeid,jdbcType=INTEGER},
			</if>
			<if test="strclass != null">
				#{strclass,jdbcType=VARCHAR},
			</if>
			<if test="intstudcount != null">
				#{intstudcount,jdbcType=INTEGER},
			</if>
			<if test="intteaccount != null">
				#{intteaccount,jdbcType=INTEGER},
			</if>
			<if test="intbookid != null">
				#{intbookid,jdbcType=INTEGER},
			</if>
			<if test="intuserid != null">
				#{intuserid,jdbcType=INTEGER},
			</if>
			<if test="intplanstatusid != null">
				#{intplanstatusid,jdbcType=INTEGER},
			</if>
			<if test="intfromyear != null">
				#{intfromyear,jdbcType=INTEGER},
			</if>
			<if test="inttoyear != null">
				#{inttoyear,jdbcType=INTEGER},
			</if>
			<if test="intterm != null">
				#{intterm,jdbcType=INTEGER},
			</if>
			<if test="datecreatetime != null">
				#{datecreatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="strmark != null">
				#{strmark,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.jcos.teaching.core.model.BookPlan">
		update bookplan
		<set>
			<if test="strcoursename != null">
				strCourseName = #{strcoursename,jdbcType=VARCHAR},
			</if>
			<if test="intcoursetypeid != null">
				intCourseTypeId = #{intcoursetypeid,jdbcType=INTEGER},
			</if>
			<if test="strclass != null">
				strClass = #{strclass,jdbcType=VARCHAR},
			</if>
			<if test="intstudcount != null">
				intStudCount = #{intstudcount,jdbcType=INTEGER},
			</if>
			<if test="intteaccount != null">
				intTeacCount = #{intteaccount,jdbcType=INTEGER},
			</if>
			<if test="intbookid != null">
				intBookId = #{intbookid,jdbcType=INTEGER},
			</if>
			<if test="intuserid != null">
				intUserId = #{intuserid,jdbcType=INTEGER},
			</if>
			<if test="intplanstatusid != null">
				intPlanStatusId = #{intplanstatusid,jdbcType=INTEGER},
			</if>
			<if test="intfromyear != null">
				intFromYear = #{intfromyear,jdbcType=INTEGER},
			</if>
			<if test="inttoyear != null">
				intToYear = #{inttoyear,jdbcType=INTEGER},
			</if>
			<if test="intterm != null">
				intTerm = #{intterm,jdbcType=INTEGER},
			</if>
			<if test="datecreatetime != null">
				dateCreateTime = #{datecreatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="strmark != null">
				strMark = #{strmark,jdbcType=VARCHAR},
			</if>
		</set>
		where intPlanId = #{intplanid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.jcos.teaching.core.model.BookPlan">
		update bookplan
		set strCourseName = #{strcoursename,jdbcType=VARCHAR},
		intCourseTypeId = #{intcoursetypeid,jdbcType=INTEGER},
		strClass =
		#{strclass,jdbcType=VARCHAR},
		intStudCount = #{intstudcount,jdbcType=INTEGER},
		intTeacCount =
		#{intteaccount,jdbcType=INTEGER},
		intBookId = #{intbookid,jdbcType=INTEGER},
		intUserId =
		#{intuserid,jdbcType=INTEGER},
		intPlanStatusId = #{intplanstatusid,jdbcType=INTEGER},
		intFromYear = #{intfromyear,jdbcType=INTEGER},
		intToYear = #{inttoyear,jdbcType=INTEGER},
		intTerm =
		#{intterm,jdbcType=INTEGER},
		dateCreateTime = #{datecreatetime,jdbcType=TIMESTAMP},
		strMark = #{strmark,jdbcType=VARCHAR}
		where intPlanId = #{intplanid,jdbcType=INTEGER}
	</update>
	<select id="authBookIds" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		select count(intPlanId) from bookplan
		where intBookId = #{intbookid,jdbcType=INTEGER}
	</select>
	<select id="authUserIds" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		select count(intPlanId) from bookplan
		where intUserId = #{intuserid,jdbcType=INTEGER}
	</select>

	<resultMap id="BookPlanTypeExtendMap" type="BookPlan" extends="BaseResultMap">
		<association property="courseType" column="intCourseTypeId" select="com.jcos.teaching.core.dao.CourseTypeMapper.selectByPrimaryKey" />
		<association property="book" column="intBookId" select="com.jcos.teaching.core.dao.BookMapper.selectByPrimaryKey" />
		<association property="bookPlanStatus" column="intPlanStatusId" select="com.jcos.teaching.core.dao.BookPlanStatusMapper.selectByPrimaryKey" />
		<association property="user" column="intUserId" select="com.jcos.teaching.core.dao.UserMapper.selectByPrimaryKey" />
	</resultMap>

	<select id="selectPersonalTotalCountOrAll" resultType="java.lang.Integer">
		select
		count(x.intPlanId)
		from bookplan x LEFT JOIN book y on x.intBookId=y.intBookId
		<trim prefix="where" suffix="" suffixOverrides="AND">
			<if test="intuserid != null">
				x.intUserId = #{intuserid,jdbcType=INTEGER} AND
			</if>
			<if test="strcoursename != null">
				x.strCourseName like CONCAT('%',#{strcoursename,jdbcType=VARCHAR},'%') AND
			</if>
			<if test="strclass != null">
				x.strClass like CONCAT('%',#{strclass,jdbcType=VARCHAR},'%') AND
			</if>
			<if test="intcoursetypeid != null">
				x.intCourseTypeId = #{intcoursetypeid,jdbcType=INTEGER} AND
			</if>
			<if test="intstudcount != null">
				x.intStudCount = #{intstudcount,jdbcType=INTEGER} AND
			</if>
			<if test="intteaccount != null">
				x.intTeacCount = #{intteaccount,jdbcType=INTEGER} AND
			</if>
			<if test="book != null and book.strbookname != null">
				y.strBookName like CONCAT('%',#{book.strbookname,jdbcType=VARCHAR},'%') AND
			</if>
			<if test="intplanstatusid !=null">
				x.intPlanStatusId = #{intplanstatusid,jdbcType=INTEGER} AND
			</if>
			<if test="intfromyear !=null">
				x.intFromYear = #{intfromyear,jdbcType=INTEGER} AND
			</if>
			<if test="inttoyear !=null">
				x.intToYear = #{inttoyear,jdbcType=INTEGER} AND
			</if>
			<if test="intterm !=null">
				x.intTerm = #{intterm,jdbcType=INTEGER} AND
			</if>
			<if test="datecreatetime != null">
				date_format(x.dateCreateTime,'%y-%m-%d') = date_format(#{datecreatetime,jdbcType=TIMESTAMP},'%y-%m-%d')
			</if>
		</trim>
	</select>
	<select id="selectPersonalOrAll" resultMap="BookPlanTypeExtendMap">
		select
		x.intPlanId, x.strCourseName, x.intCourseTypeId, x.strClass, (x.intStudCount + COALESCE(SUM(z.intStudent),0)) as intStudCount, (x.intTeacCount + COALESCE(SUM(z.intTeacher),0)) as intTeacCount,
		x.intBookId,
		x.intPlanStatusId, x.intFromYear, x.intToYear, x.intTerm,
		x.dateCreateTime,x.strMark
		<if test="type == true ">,x.intUserId</if>
		from bookplan
		x LEFT JOIN book
		y on x.intBookId=y.intBookId LEFT JOIN bookplanchange z ON x.intPlanId =
		z.intPlanId
		<trim prefix="where" suffix="" suffixOverrides="AND">
			<if test="record.intuserid != null">
				x.intUserId = #{record.intuserid,jdbcType=INTEGER} AND
			</if>
			<if test="record.strcoursename != null">
				x.strCourseName like CONCAT('%',#{record.strcoursename,jdbcType=VARCHAR},'%') AND
			</if>
			<if test="record.strclass != null">
				x.strClass like CONCAT('%',#{record.strclass,jdbcType=VARCHAR},'%') AND
			</if>
			<if test="record.intcoursetypeid != null">
				x.intCourseTypeId = #{record.intcoursetypeid,jdbcType=INTEGER} AND
			</if>
			<if test="record.intstudcount != null">
				x.intStudCount = #{record.intstudcount,jdbcType=INTEGER} AND
			</if>
			<if test="record.intteaccount != null">
				x.intTeacCount = #{record.intteaccount,jdbcType=INTEGER} AND
			</if>
			<if test="record.book !=null and record.book.strbookname != null">
				y.strBookName like CONCAT('%',#{record.book.strbookname,jdbcType=VARCHAR},'%') AND
			</if>
			<if test="record.intplanstatusid !=null">
				x.intPlanStatusId = #{record.intplanstatusid,jdbcType=INTEGER} AND
			</if>
			<if test="record.intfromyear !=null">
				x.intFromYear = #{record.intfromyear,jdbcType=INTEGER} AND
			</if>
			<if test="record.inttoyear !=null">
				x.intToYear = #{record.inttoyear,jdbcType=INTEGER} AND
			</if>
			<if test="record.intterm !=null">
				x.intTerm = #{record.intterm,jdbcType=INTEGER} AND
			</if>
			<if test="record.datecreatetime != null">
				date_format(x.dateCreateTime,'%y-%m-%d') = date_format(#{record.datecreatetime,jdbcType=TIMESTAMP},'%y-%m-%d')
			</if>
		</trim>
		group by x.intPlanId
		order by intBookId asc
		limit #{start,jdbcType=INTEGER} , #{size,jdbcType=INTEGER}
	</select>

	<select id="authPlanByUserIdAndPlanId" resultType="java.lang.Integer">
		select count(intPlanId) from bookplan where intPlanId = #{planId,jdbcType=INTEGER} and intUserId = #{userId,jdbcType=INTEGER}
	</select>

	<select id="selectPlanStatus" resultMap="BaseResultMap">
		select intPlanId,intPlanStatusId from bookplan where intPlanId in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item,jdbcType=INTEGER}
		</foreach>
	</select>

	<resultMap id="BookPlanAllTypeExtendMap" type="BookPlan" extends="BaseResultMap">
		<association property="courseType" column="intCourseTypeId" select="com.jcos.teaching.core.dao.CourseTypeMapper.selectByPrimaryKey" />
		<association property="book" column="intBookId" select="com.jcos.teaching.core.dao.BookMapper.selectByPrimaryKey" />
		<association property="bookPlanStatus" column="intPlanStatusId" select="com.jcos.teaching.core.dao.BookPlanStatusMapper.selectByPrimaryKey" />
		<association property="user" column="intUserId" select="com.jcos.teaching.core.dao.UserMapper.selectByPrimaryKey" />
	</resultMap>

	<update id="setPlanStatusByIds" parameterType="com.jcos.teaching.core.model.BookPlan">
		update bookplan
		set intPlanStatusId = #{statusid,jdbcType=INTEGER}
		where intPlanId in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item,jdbcType=INTEGER}
		</foreach>
	</update>
</mapper>